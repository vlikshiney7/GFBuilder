package fr.vlik.grandfantasia.loader.charac;

import java.util.HashMap;

import fr.vlik.grandfantasia.charac.Archive;
import fr.vlik.grandfantasia.charac.Blason;
import fr.vlik.grandfantasia.charac.Grade;
import fr.vlik.grandfantasia.charac.Grade.GradeName;
import fr.vlik.grandfantasia.charac.Reinca;
import fr.vlik.grandfantasia.enums.Language;
import fr.vlik.grandfantasia.enums.Quality;
import fr.vlik.grandfantasia.enums.TypeEffect;
import fr.vlik.grandfantasia.stats.Effect;
import fr.vlik.grandfantasia.stats.Effect.TypeCalcul;

@SuppressWarnings("serial")
public class LoaderCharac {
	
	public static Grade[] getGrade() {
		return new Grade[] {
			new Grade(new HashMap<Language, String>() {{ put(Language.FR, "Novice"); put(Language.EN, "Novice"); }},
				GradeName.NONE, 0, 5, "novice"),
			new Grade(new HashMap<Language, String>() {{ put(Language.FR, "Combattant"); put(Language.EN, "Fighter"); }},
				GradeName.BERSERKER, 6, 15, "0-0"),
			new Grade(new HashMap<Language, String>() {{ put(Language.FR, "Chasseur"); put(Language.EN, "Hunter"); }},
				GradeName.RANGER, 6, 15, "0-2"),
			new Grade(new HashMap<Language, String>() {{ put(Language.FR, "Acolyte"); put(Language.EN, "Acolyte"); }},
				GradeName.CLERC, 6, 15, "0-4"),
			new Grade(new HashMap<Language, String>() {{ put(Language.FR, "Ensorceleur"); put(Language.EN, "Spellcaster"); }},
				GradeName.SORCIER, 6, 15, "0-6"),
			new Grade(new HashMap<Language, String>() {{ put(Language.FR, "Mécanicien"); put(Language.EN, "Mechanic"); }},
				GradeName.METALLEUX, 6, 15, "0-8"),
			new Grade(new HashMap<Language, String>() {{ put(Language.FR, "Voyageur"); put(Language.EN, "Wanderer"); }},
				GradeName.SPATIODERIVEUR, 6, 15, "0-10"),
			new Grade(new HashMap<Language, String>() {{ put(Language.FR, "Guerrier"); put(Language.EN, "Warrior"); }},
				GradeName.BERSERKER, 16, 30, "1-0"),
			new Grade(new HashMap<Language, String>() {{ put(Language.FR, "Archer"); put(Language.EN, "Archer"); }},
				GradeName.RANGER, 16, 30, "1-2"),
			new Grade(new HashMap<Language, String>() {{ put(Language.FR, "Prêtre"); put(Language.EN, "Priest"); }},
				GradeName.CLERC, 16, 30, "1-4"),
			new Grade(new HashMap<Language, String>() {{ put(Language.FR, "Magicien"); put(Language.EN, "Mage"); }},
				GradeName.SORCIER, 16, 30, "1-6"),
			new Grade(new HashMap<Language, String>() {{ put(Language.FR, "Machiniste"); put(Language.EN, "Machinist"); }},
				GradeName.METALLEUX, 16, 30, "1-8"),
			new Grade(new HashMap<Language, String>() {{ put(Language.FR, "Explorateur"); put(Language.EN, "Drifter"); }},
				GradeName.SPATIODERIVEUR, 16, 30, "1-10"),
			new Grade(new HashMap<Language, String>() {{ put(Language.FR, "Berserker"); put(Language.EN, "Berserker"); }},
				GradeName.BERSERKER, 31, 65, "2-0"),
			new Grade(new HashMap<Language, String>() {{ put(Language.FR, "Paladin"); put(Language.EN, "Paladin"); }},
				GradeName.PALADIN, 31, 65, "2-1"),
			new Grade(new HashMap<Language, String>() {{ put(Language.FR, "Ranger"); put(Language.EN, "Ranger"); }},
				GradeName.RANGER, 31, 65, "2-2"),
			new Grade(new HashMap<Language, String>() {{ put(Language.FR, "Assassin"); put(Language.EN, "Assassin"); }},
				GradeName.ASSASSIN, 31, 65, "2-3"),
			new Grade(new HashMap<Language, String>() {{ put(Language.FR, "Clerc"); put(Language.EN, "Cleric"); }},
				GradeName.CLERC, 31, 65, "2-4"),
			new Grade(new HashMap<Language, String>() {{ put(Language.FR, "Sage"); put(Language.EN, "Sage"); }},
				GradeName.SAGE, 31, 65, "2-5"),
			new Grade(new HashMap<Language, String>() {{ put(Language.FR, "Sorcier"); put(Language.EN, "Wizard"); }},
				GradeName.SORCIER, 31, 65, "2-6"),
			new Grade(new HashMap<Language, String>() {{ put(Language.FR, "Nécromancien"); put(Language.EN, "Necromancer"); }},
				GradeName.NECROMANCIEN, 31, 65, "2-7"),
			new Grade(new HashMap<Language, String>() {{ put(Language.FR, "Métalleux"); put(Language.EN, "Engineer"); }},
				GradeName.METALLEUX, 31, 65, "2-8"),
			new Grade(new HashMap<Language, String>() {{ put(Language.FR, "Démolisseur"); put(Language.EN, "Demolitionist"); }},
				GradeName.DEMOLISSEUR, 31, 65, "2-9"),
			new Grade(new HashMap<Language, String>() {{ put(Language.FR, "Spatiodériveur"); put(Language.EN, "Void Runner"); }},
				GradeName.SPATIODERIVEUR, 31, 65, "2-10"),
			new Grade(new HashMap<Language, String>() {{ put(Language.FR, "Chronodériveur"); put(Language.EN, "Time Traveler"); }},
				GradeName.CHRONODERIVEUR, 31, 65, "2-11"),
			new Grade(new HashMap<Language, String>() {{ put(Language.FR, "Gladiateur"); put(Language.EN, "Warlord"); }},
				GradeName.BERSERKER, 66, 85, "3-0"),
			new Grade(new HashMap<Language, String>() {{ put(Language.FR, "Vindicateur"); put(Language.EN, "Templar"); }},
				GradeName.PALADIN, 66, 85, "3-1"),
			new Grade(new HashMap<Language, String>() {{ put(Language.FR, "Traqueur"); put(Language.EN, "Sharpshooter"); }},
				GradeName.RANGER, 66, 85, "3-2"),
			new Grade(new HashMap<Language, String>() {{ put(Language.FR, "Ninja"); put(Language.EN, "Darkstalker"); }},
				GradeName.ASSASSIN, 66, 85, "3-3"),
			new Grade(new HashMap<Language, String>() {{ put(Language.FR, "Rédempteur"); put(Language.EN, "Prophet"); }},
				GradeName.CLERC, 66, 85, "3-4"),
			new Grade(new HashMap<Language, String>() {{ put(Language.FR, "Oracle"); put(Language.EN, "Mystic"); }},
				GradeName.SAGE, 66, 85, "3-5"),
			new Grade(new HashMap<Language, String>() {{ put(Language.FR, "Archimage"); put(Language.EN, "Archmage"); }},
				GradeName.SORCIER, 66, 85, "3-6"),
			new Grade(new HashMap<Language, String>() {{ put(Language.FR, "Démoniste"); put(Language.EN, "Demonologist"); }},
				GradeName.NECROMANCIEN, 66, 85, "3-7"),
			new Grade(new HashMap<Language, String>() {{ put(Language.FR, "Prime"); put(Language.EN, "Gearmaster"); }},
				GradeName.METALLEUX, 66, 85, "3-8"),
			new Grade(new HashMap<Language, String>() {{ put(Language.FR, "Optimus"); put(Language.EN, "Gunner"); }},
				GradeName.DEMOLISSEUR, 66, 85, "3-9"),
			new Grade(new HashMap<Language, String>() {{ put(Language.FR, "Ronin"); put(Language.EN, "Dimensionalist"); }},
				GradeName.SPATIODERIVEUR, 66, 85, "3-10"),
			new Grade(new HashMap<Language, String>() {{ put(Language.FR, "Horloger"); put(Language.EN, "Key master"); }},
				GradeName.CHRONODERIVEUR, 66, 85, "3-11"),
			new Grade(new HashMap<Language, String>() {{ put(Language.FR, "Ravageur"); put(Language.EN, "Deathknight"); }},
				GradeName.BERSERKER, 86, 90, "4-0"),
			new Grade(new HashMap<Language, String>() {{ put(Language.FR, "Templier"); put(Language.EN, "Crusader"); }},
				GradeName.PALADIN, 86, 90, "4-1"),
			new Grade(new HashMap<Language, String>() {{ put(Language.FR, "Sniper"); put(Language.EN, "Hawkeye"); }},
				GradeName.RANGER, 86, 90, "4-2"),
			new Grade(new HashMap<Language, String>() {{ put(Language.FR, "Shinobi"); put(Language.EN, "Windshadow"); }},
				GradeName.ASSASSIN, 86, 90, "4-3"),
			new Grade(new HashMap<Language, String>() {{ put(Language.FR, "Exorciste"); put(Language.EN, "Saint"); }},
				GradeName.CLERC, 86, 90, "4-4"),
			new Grade(new HashMap<Language, String>() {{ put(Language.FR, "Shaman"); put(Language.EN, "Shaman"); }},
				GradeName.SAGE, 86, 90, "4-5"),
			new Grade(new HashMap<Language, String>() {{ put(Language.FR, "Avatar"); put(Language.EN, "Avatar"); }},
				GradeName.SORCIER, 86, 90, "4-6"),
			new Grade(new HashMap<Language, String>() {{ put(Language.FR, "Shinigami"); put(Language.EN, "Shadowlord"); }},
				GradeName.NECROMANCIEN, 86, 90, "4-7"),
			new Grade(new HashMap<Language, String>() {{ put(Language.FR, "Mégatron"); put(Language.EN, "Cogmaster"); }},
				GradeName.METALLEUX, 86, 90, "4-8"),
			new Grade(new HashMap<Language, String>() {{ put(Language.FR, "Galvatron"); put(Language.EN, "Bombardier"); }},
				GradeName.DEMOLISSEUR, 86, 90, "4-9"),
			new Grade(new HashMap<Language, String>() {{ put(Language.FR, "Occultiste"); put(Language.EN, "Reaper"); }},
				GradeName.SPATIODERIVEUR, 86, 90, "4-10"),
			new Grade(new HashMap<Language, String>() {{ put(Language.FR, "Augure"); put(Language.EN, "Chronomancer"); }},
				GradeName.CHRONODERIVEUR, 86, 90, "4-11"),
			new Grade(new HashMap<Language, String>() {{ put(Language.FR, "Destructeur"); put(Language.EN, "Destroyer"); }},
				GradeName.BERSERKER, 91, 100, "5-0"),
			new Grade(new HashMap<Language, String>() {{ put(Language.FR, "Croisé"); put(Language.EN, "Holy Knight"); }},
				GradeName.PALADIN, 91, 100, "5-1"),
			new Grade(new HashMap<Language, String>() {{ put(Language.FR, "Prédateur"); put(Language.EN, "Predator"); }},
				GradeName.RANGER, 91, 100, "5-2"),
			new Grade(new HashMap<Language, String>() {{ put(Language.FR, "Kage"); put(Language.EN, "Shinobi"); }},
				GradeName.ASSASSIN, 91, 100, "5-3"),
			new Grade(new HashMap<Language, String>() {{ put(Language.FR, "Archange"); put(Language.EN, "Archangel"); }},
				GradeName.CLERC, 91, 100, "5-4"),
			new Grade(new HashMap<Language, String>() {{ put(Language.FR, "Druide"); put(Language.EN, "Druid"); }},
				GradeName.SAGE, 91, 100, "5-5"),
			new Grade(new HashMap<Language, String>() {{ put(Language.FR, "Arcaniste"); put(Language.EN, "Warlock"); }},
				GradeName.SORCIER, 91, 100, "5-6"),
			new Grade(new HashMap<Language, String>() {{ put(Language.FR, "Faucheur"); put(Language.EN, "Shinigami"); }},
				GradeName.NECROMANCIEN, 91, 100, "5-7"),
			new Grade(new HashMap<Language, String>() {{ put(Language.FR, "Oméga"); put(Language.EN, "Mechmaster"); }},
				GradeName.METALLEUX, 91, 100, "5-8"),
			new Grade(new HashMap<Language, String>() {{ put(Language.FR, "Suprême"); put(Language.EN, "Artillerist"); }},
				GradeName.DEMOLISSEUR, 91, 100, "5-9"),
			new Grade(new HashMap<Language, String>() {{ put(Language.FR, "Dimensionaliste"); put(Language.EN, "Phantom"); }},
				GradeName.SPATIODERIVEUR, 91, 100, "5-10"),
			new Grade(new HashMap<Language, String>() {{ put(Language.FR, "Chronomancien"); put(Language.EN, "Chronoshifter"); }},
				GradeName.CHRONODERIVEUR, 91, 100, "5-11"),
		};
	}
	
	public static Reinca[] getReinca() {
		return new Reinca[] {
			new Reinca(new HashMap<Language, String>() {{ put(Language.FR, "Aucun"); put(Language.EN, "None"); }}, 1, 1, 100, 0, "none"),
			new Reinca(new HashMap<Language, String>() {{ put(Language.FR, "Niveau 1 - Éval 1"); put(Language.EN, "Level 1 - Eval 1"); }}, 1.045, 1, 65, 1, "lvl1"),
			new Reinca(new HashMap<Language, String>() {{ put(Language.FR, "Niveau 1 - Éval 2"); put(Language.EN, "Level 1 - Eval 2"); }}, 1.08, 66, 85, 1, "lvl1"),
			new Reinca(new HashMap<Language, String>() {{ put(Language.FR, "Niveau 1 - Éval 3"); put(Language.EN, "Level 1 - Eval 3"); }}, 1.12, 86, 90, 1, "lvl1"),
			new Reinca(new HashMap<Language, String>() {{ put(Language.FR, "Niveau 1 - Éval 4"); put(Language.EN, "Level 1 - Eval 4"); }}, 1.16, 91, 99, 1, "lvl1"),
			new Reinca(new HashMap<Language, String>() {{ put(Language.FR, "Niveau 1 - Éval 5"); put(Language.EN, "Level 1 - Eval 5"); }}, 1.2, 100, 100, 1, "lvl1")
		};
	}
	
	public static Archive[] getArchive() {
		return new Archive[] {
			new Archive(new HashMap<Language, String>() {{ put(Language.FR, "Aucun"); put(Language.EN, "None"); }}, Quality.GREY, null),
			new Archive(new HashMap<Language, String>() {{ put(Language.FR, "Architecte Débutant"); put(Language.EN, "Rookie Island Decorator"); }}, Quality.WHITE, new Effect[] {
				new Effect(TypeEffect.PV, false, 432, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.PM, false, 180, TypeCalcul.ADDITIONAL),
			}),
			new Archive(new HashMap<Language, String>() {{ put(Language.FR, "Architecte Amateur"); put(Language.EN, "Basic Island Decorator"); }}, Quality.GREEN, new Effect[] {
				new Effect(TypeEffect.PV, false, 864, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.PM, false, 360, TypeCalcul.ADDITIONAL),
			}),
			new Archive(new HashMap<Language, String>() {{ put(Language.FR, "Architecte Confirmé"); put(Language.EN, "Intermediate Decorator"); }}, Quality.GREEN, new Effect[] {
				new Effect(TypeEffect.PV, false, 1296, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.PM, false, 540, TypeCalcul.ADDITIONAL),
			}),
			new Archive(new HashMap<Language, String>() {{ put(Language.FR, "Décorateur Professionnel de l'Île"); put(Language.EN, "Advanced Island Decorator"); }}, Quality.BLUE, new Effect[] {
				new Effect(TypeEffect.PV, false, 1728, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.PM, false, 720, TypeCalcul.ADDITIONAL),
			}),
			new Archive(new HashMap<Language, String>() {{ put(Language.FR, "Artiste de l'Île"); put(Language.EN, "Island Artist"); }}, Quality.BLUE, new Effect[] {
				new Effect(TypeEffect.PV, false, 2160, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.PM, false, 900, TypeCalcul.ADDITIONAL),
			}),
			new Archive(new HashMap<Language, String>() {{ put(Language.FR, "Artiste de l'Île - Superstar"); put(Language.EN, "Superstar Island Artist"); }}, Quality.BLUE, new Effect[] {
				new Effect(TypeEffect.PV, false, 2592, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.PM, false, 1080, TypeCalcul.ADDITIONAL),
			}),
			new Archive(new HashMap<Language, String>() {{ put(Language.FR, "Artiste de l'Île - Expert"); put(Language.EN, "Expert Island Artist"); }}, Quality.ORANGE, new Effect[] {
				new Effect(TypeEffect.PV, false, 3024, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.PM, false, 1260, TypeCalcul.ADDITIONAL),
			}),
			new Archive(new HashMap<Language, String>() {{ put(Language.FR, "Artiste de l'Île - Talentueux"); put(Language.EN, "Talented Island Artist"); }}, Quality.ORANGE, new Effect[] {
				new Effect(TypeEffect.PV, false, 3456, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.PM, false, 1440, TypeCalcul.ADDITIONAL),
			}),
			new Archive(new HashMap<Language, String>() {{ put(Language.FR, "Artiste de l'Île - Chef"); put(Language.EN, "Chief Island Artist"); }}, Quality.ORANGE, new Effect[] {
				new Effect(TypeEffect.PV, false, 3888, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.PM, false, 1620, TypeCalcul.ADDITIONAL),
			}),
			new Archive(new HashMap<Language, String>() {{ put(Language.FR, "Artiste de l'Île - Maître"); put(Language.EN, "Master Island Artist"); }}, Quality.GOLD, new Effect[] {
				new Effect(TypeEffect.PV, false, 4320, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.PM, false, 1800, TypeCalcul.ADDITIONAL),
			}),
			new Archive(new HashMap<Language, String>() {{ put(Language.FR, "Top-Model Débutant"); put(Language.EN, "Rookie Organizer"); }}, Quality.WHITE, new Effect[] {
				new Effect(TypeEffect.Atk, false, 234, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.AtkD, false, 180, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.AtkM, false, 180, TypeCalcul.ADDITIONAL),
			}),
			new Archive(new HashMap<Language, String>() {{ put(Language.FR, "Top-Model Amateur"); put(Language.EN, "Basic Organizer"); }}, Quality.GREEN, new Effect[] {
				new Effect(TypeEffect.Atk, false, 468, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.AtkD, false, 360, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.AtkM, false, 360, TypeCalcul.ADDITIONAL),
			}),
			new Archive(new HashMap<Language, String>() {{ put(Language.FR, "Top-Model Confirmé"); put(Language.EN, "Intermediate Organizer"); }}, Quality.GREEN, new Effect[] {
				new Effect(TypeEffect.Atk, false, 702, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.AtkD, false, 540, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.AtkM, false, 540, TypeCalcul.ADDITIONAL),
			}),
			new Archive(new HashMap<Language, String>() {{ put(Language.FR, "Organisateur Professionnel"); put(Language.EN, "Advanced Organizer"); }}, Quality.BLUE, new Effect[] {
				new Effect(TypeEffect.Atk, false, 936, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.AtkD, false, 720, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.AtkM, false, 720, TypeCalcul.ADDITIONAL),
			}),
			new Archive(new HashMap<Language, String>() {{ put(Language.FR, "Organisateur"); put(Language.EN, "Organizer"); }}, Quality.BLUE, new Effect[] {
				new Effect(TypeEffect.Atk, false, 1170, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.AtkD, false, 900, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.AtkM, false, 900, TypeCalcul.ADDITIONAL),
			}),
			new Archive(new HashMap<Language, String>() {{ put(Language.FR, "Organisateur - Superstar"); put(Language.EN, "Superstar Organizer"); }}, Quality.BLUE, new Effect[] {
				new Effect(TypeEffect.Atk, false, 1404, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.AtkD, false, 1080, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.AtkM, false, 1080, TypeCalcul.ADDITIONAL),
			}),
			new Archive(new HashMap<Language, String>() {{ put(Language.FR, "Organisateur - Expert"); put(Language.EN, "Expert Organizer"); }}, Quality.ORANGE, new Effect[] {
				new Effect(TypeEffect.Atk, false, 1638, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.AtkD, false, 1260, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.AtkM, false, 1260, TypeCalcul.ADDITIONAL),
			}),
			new Archive(new HashMap<Language, String>() {{ put(Language.FR, "Organisateur - Talentueux"); put(Language.EN, "Talented Organizer"); }}, Quality.ORANGE, new Effect[] {
				new Effect(TypeEffect.Atk, false, 1872, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.AtkD, false, 1440, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.AtkM, false, 1440, TypeCalcul.ADDITIONAL),
			}),
			new Archive(new HashMap<Language, String>() {{ put(Language.FR, "Organisateur - Chef"); put(Language.EN, "Chief Organizer"); }}, Quality.ORANGE, new Effect[] {
				new Effect(TypeEffect.Atk, false, 2106, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.AtkD, false, 1620, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.AtkM, false, 1620, TypeCalcul.ADDITIONAL),
			}),
			new Archive(new HashMap<Language, String>() {{ put(Language.FR, "Organisateur - Maître"); put(Language.EN, "Master Organizer"); }}, Quality.GOLD, new Effect[] {
				new Effect(TypeEffect.Atk, false, 2340, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.AtkD, false, 1800, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.AtkM, false, 1800, TypeCalcul.ADDITIONAL),
			}),
			new Archive(new HashMap<Language, String>() {{ put(Language.FR, "Philatéliste Débutant"); put(Language.EN, "Rookie Gatherer"); }}, Quality.WHITE, new Effect[] {
				new Effect(TypeEffect.Toucher, false, 20, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.ESQ, false, 10, TypeCalcul.ADDITIONAL),
			}),
			new Archive(new HashMap<Language, String>() {{ put(Language.FR, "Philatéliste Amateur"); put(Language.EN, "Basic Gatherer"); }}, Quality.GREEN, new Effect[] {
				new Effect(TypeEffect.Toucher, false, 40, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.ESQ, false, 20, TypeCalcul.ADDITIONAL),
			}),
			new Archive(new HashMap<Language, String>() {{ put(Language.FR, "Philatéliste Confirmé"); put(Language.EN, "Intermediate Gatherer"); }}, Quality.GREEN, new Effect[] {
				new Effect(TypeEffect.Toucher, false, 60, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.ESQ, false, 30, TypeCalcul.ADDITIONAL),
			}),
			new Archive(new HashMap<Language, String>() {{ put(Language.FR, "Récolteur Professionnel"); put(Language.EN, "Advanced Gatherer"); }}, Quality.BLUE, new Effect[] {
				new Effect(TypeEffect.Toucher, false, 80, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.ESQ, false, 40, TypeCalcul.ADDITIONAL),
			}),
			new Archive(new HashMap<Language, String>() {{ put(Language.FR, "Collectionneur "); put(Language.EN, "Collector "); }}, Quality.BLUE, new Effect[] {
				new Effect(TypeEffect.Toucher, false, 100, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.ESQ, false, 50, TypeCalcul.ADDITIONAL),
			}),
			new Archive(new HashMap<Language, String>() {{ put(Language.FR, "Collectionneur - Superstar "); put(Language.EN, "Superstar Collector "); }}, Quality.BLUE, new Effect[] {
				new Effect(TypeEffect.Toucher, false, 110, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.ESQ, false, 55, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.FCE, false, 5, true, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.VIT, false, 5, true, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.INT, false, 5, true, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.VOL, false, 5, true, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.AGI, false, 5, true, TypeCalcul.ADDITIONAL),
			}),
			new Archive(new HashMap<Language, String>() {{ put(Language.FR, "Collectionneur - Expert "); put(Language.EN, "Expert Collector "); }}, Quality.ORANGE, new Effect[] {
				new Effect(TypeEffect.Toucher, false, 120, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.ESQ, false, 60, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.FCE, false, 10, true, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.VIT, false, 10, true, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.INT, false, 10, true, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.VOL, false, 10, true, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.AGI, false, 10, true, TypeCalcul.ADDITIONAL),
			}),
			new Archive(new HashMap<Language, String>() {{ put(Language.FR, "Collectionneur - Talentueux "); put(Language.EN, "Talented Collector "); }}, Quality.ORANGE, new Effect[] {
				new Effect(TypeEffect.Toucher, false, 130, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.ESQ, false, 65, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.FCE, false, 15, true, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.VIT, false, 15, true, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.INT, false, 15, true, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.VOL, false, 15, true, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.AGI, false, 15, true, TypeCalcul.ADDITIONAL),
			}),
			new Archive(new HashMap<Language, String>() {{ put(Language.FR, "Collectionneur - Chef "); put(Language.EN, "Chief Collector "); }}, Quality.ORANGE, new Effect[] {
				new Effect(TypeEffect.Toucher, false, 140, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.ESQ, false, 70, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.FCE, false, 20, true, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.VIT, false, 20, true, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.INT, false, 20, true, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.VOL, false, 20, true, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.AGI, false, 20, true, TypeCalcul.ADDITIONAL),
			}),
			new Archive(new HashMap<Language, String>() {{ put(Language.FR, "Collectionneur - Maître "); put(Language.EN, "Master Collector "); }}, Quality.GOLD, new Effect[] {
				new Effect(TypeEffect.Toucher, false, 150, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.ESQ, false, 75, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.FCE, false, 25, true, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.VIT, false, 25, true, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.INT, false, 25, true, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.VOL, false, 25, true, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.AGI, false, 25, true, TypeCalcul.ADDITIONAL),
			}),
			new Archive(new HashMap<Language, String>() {{ put(Language.FR, "Sprite Débutant"); put(Language.EN, "Rookie Sprite Nanny"); }}, Quality.WHITE, new Effect[] {
				new Effect(TypeEffect.DefP, false, 108, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.DefM, false, 90, TypeCalcul.ADDITIONAL),
			}),
			new Archive(new HashMap<Language, String>() {{ put(Language.FR, "Sprite Amateur"); put(Language.EN, "Basic Sprite Nanny"); }}, Quality.GREEN, new Effect[] {
				new Effect(TypeEffect.DefP, false, 216, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.DefM, false, 180, TypeCalcul.ADDITIONAL),
			}),
			new Archive(new HashMap<Language, String>() {{ put(Language.FR, "Sprite Confirmé"); put(Language.EN, "Intermediate Nanny"); }}, Quality.GREEN, new Effect[] {
				new Effect(TypeEffect.DefP, false, 324, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.DefM, false, 270, TypeCalcul.ADDITIONAL),
			}),
			new Archive(new HashMap<Language, String>() {{ put(Language.FR, "Nounou Sprite Professionnelle"); put(Language.EN, "Advanced Sprite Nanny"); }}, Quality.BLUE, new Effect[] {
				new Effect(TypeEffect.DefP, false, 432, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.DefM, false, 360, TypeCalcul.ADDITIONAL),
			}),
			new Archive(new HashMap<Language, String>() {{ put(Language.FR, "Protecteur des Sprite"); put(Language.EN, "Sprite Protector"); }}, Quality.BLUE, new Effect[] {
				new Effect(TypeEffect.DefP, false, 540, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.DefM, false, 450, TypeCalcul.ADDITIONAL),
			}),
			new Archive(new HashMap<Language, String>() {{ put(Language.FR, "Protecteur des Sprite - Superstar"); put(Language.EN, "Superstar Sprite Protector"); }}, Quality.BLUE, new Effect[] {
				new Effect(TypeEffect.DefP, false, 648, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.DefM, false, 540, TypeCalcul.ADDITIONAL),
			}),
			new Archive(new HashMap<Language, String>() {{ put(Language.FR, "Protecteur des Sprite - Expert"); put(Language.EN, "Expert Sprite Protector"); }}, Quality.ORANGE, new Effect[] {
				new Effect(TypeEffect.DefP, false, 756, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.DefM, false, 630, TypeCalcul.ADDITIONAL),
			}),
			new Archive(new HashMap<Language, String>() {{ put(Language.FR, "Protecteur des Sprite - Talentueux"); put(Language.EN, "Talented Sprite Protector"); }}, Quality.ORANGE, new Effect[] {
				new Effect(TypeEffect.DefP, false, 864, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.DefM, false, 720, TypeCalcul.ADDITIONAL),
			}),
			new Archive(new HashMap<Language, String>() {{ put(Language.FR, "Protecteur des Sprite - Chef"); put(Language.EN, "Chief Sprite Protector"); }}, Quality.ORANGE, new Effect[] {
				new Effect(TypeEffect.DefP, false, 972, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.DefM, false, 810, TypeCalcul.ADDITIONAL),
			}),
			new Archive(new HashMap<Language, String>() {{ put(Language.FR, "Protecteur des Sprite - Maître"); put(Language.EN, "Master Sprite Protector"); }}, Quality.GOLD, new Effect[] {
				new Effect(TypeEffect.DefP, false, 1080, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.DefM, false, 900, TypeCalcul.ADDITIONAL),
			}),
			new Archive(new HashMap<Language, String>() {{ put(Language.FR, "Dompteur Débutant"); put(Language.EN, "Rookie Garage"); }}, Quality.WHITE, new Effect[] {
					new Effect(TypeEffect.Depla, false, 2, TypeCalcul.ADDITIONAL),
			}),
			new Archive(new HashMap<Language, String>() {{ put(Language.FR, "Dompteur Amateur"); put(Language.EN, "Basic Garage"); }}, Quality.GREEN, new Effect[] {
					new Effect(TypeEffect.Depla, false, 4, TypeCalcul.ADDITIONAL),
			}),
			new Archive(new HashMap<Language, String>() {{ put(Language.FR, "Dompteur Confirmé"); put(Language.EN, "Intermediate Garage"); }}, Quality.GREEN, new Effect[] {
					new Effect(TypeEffect.Depla, false, 6, TypeCalcul.ADDITIONAL),
			}),
			new Archive(new HashMap<Language, String>() {{ put(Language.FR, "Parking de Professionnel"); put(Language.EN, "Advanced Garage"); }}, Quality.BLUE, new Effect[] {
					new Effect(TypeEffect.Depla, false, 8, TypeCalcul.ADDITIONAL),
			}),
			new Archive(new HashMap<Language, String>() {{ put(Language.FR, "Parking de Luxe"); put(Language.EN, "Luxury Garage"); }}, Quality.BLUE, new Effect[] {
					new Effect(TypeEffect.Depla, false, 10, TypeCalcul.ADDITIONAL),
			}),
			new Archive(new HashMap<Language, String>() {{ put(Language.FR, "Chantier naval - Apprenti"); put(Language.EN, "Apprentice Dockyard"); }}, Quality.BLUE, new Effect[] {
					new Effect(TypeEffect.Depla, false, 12, TypeCalcul.ADDITIONAL),
			}),
			new Archive(new HashMap<Language, String>() {{ put(Language.FR, "Chantier naval - Débutant"); put(Language.EN, "Beginner Dockyard"); }}, Quality.ORANGE, new Effect[] {
					new Effect(TypeEffect.Depla, false, 14, TypeCalcul.ADDITIONAL),
			}),
			new Archive(new HashMap<Language, String>() {{ put(Language.FR, "Chantier naval - Avancé"); put(Language.EN, "Intermediate Dockyard"); }}, Quality.ORANGE, new Effect[] {
					new Effect(TypeEffect.Depla, false, 16, TypeCalcul.ADDITIONAL),
			}),
			new Archive(new HashMap<Language, String>() {{ put(Language.FR, "Chantier naval - Senior"); put(Language.EN, "Advanced Dockyard"); }}, Quality.ORANGE, new Effect[] {
					new Effect(TypeEffect.Depla, false, 18, TypeCalcul.ADDITIONAL),
			}),
			new Archive(new HashMap<Language, String>() {{ put(Language.FR, "Chantier naval luxueux"); put(Language.EN, "Flawless Dockyard"); }}, Quality.GOLD, new Effect[] {
					new Effect(TypeEffect.Depla, false, 20, TypeCalcul.ADDITIONAL),
			}),
			new Archive(new HashMap<Language, String>() {{ put(Language.FR, "Collectionneur Débutant"); put(Language.EN, "Rookie Collector"); }}, Quality.WHITE, new Effect[] {
				new Effect(TypeEffect.PV, false, 432, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.PM, false, 180, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.Atk, false, 234, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.AtkD, false, 180, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.AtkM, false, 180, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.Toucher, false, 20, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.ESQ, false, 10, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.DefP, false, 108, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.DefM, false, 90, TypeCalcul.ADDITIONAL),
			}),
			new Archive(new HashMap<Language, String>() {{ put(Language.FR, "Collectionneur Amateur"); put(Language.EN, "Basic Collector"); }}, Quality.GREEN, new Effect[] {
				new Effect(TypeEffect.PV, false, 864, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.PM, false, 360, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.Atk, false, 468, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.AtkD, false, 360, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.AtkM, false, 360, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.Toucher, false, 40, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.ESQ, false, 20, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.DefP, false, 216, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.DefM, false, 180, TypeCalcul.ADDITIONAL),
			}),
			new Archive(new HashMap<Language, String>() {{ put(Language.FR, "Collectionneur Confirmé"); put(Language.EN, "Intermediate Collector"); }}, Quality.GREEN, new Effect[] {
				new Effect(TypeEffect.PV, false, 1296, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.PM, false, 540, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.Atk, false, 702, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.AtkD, false, 540, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.AtkM, false, 540, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.Toucher, false, 60, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.ESQ, false, 30, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.DefP, false, 324, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.DefM, false, 270, TypeCalcul.ADDITIONAL),
			}),
			new Archive(new HashMap<Language, String>() {{ put(Language.FR, "Collectionneur Professionnel"); put(Language.EN, "Advanced Collector"); }}, Quality.BLUE, new Effect[] {
				new Effect(TypeEffect.PV, false, 1728, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.PM, false, 720, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.Atk, false, 936, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.AtkD, false, 720, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.AtkM, false, 720, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.Toucher, false, 80, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.ESQ, false, 40, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.DefP, false, 432, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.DefM, false, 360, TypeCalcul.ADDITIONAL),
			}),
			new Archive(new HashMap<Language, String>() {{ put(Language.FR, "Collectionneur"); put(Language.EN, "Collector"); }}, Quality.BLUE, new Effect[] {
				new Effect(TypeEffect.PV, false, 2160, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.PM, false, 900, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.Atk, false, 1170, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.AtkD, false, 900, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.AtkM, false, 900, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.Toucher, false, 100, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.ESQ, false, 50, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.DefP, false, 540, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.DefM, false, 450, TypeCalcul.ADDITIONAL),
			}),
			new Archive(new HashMap<Language, String>() {{ put(Language.FR, "Collectionneur - Superstar"); put(Language.EN, "Superstar Collector"); }}, Quality.BLUE, new Effect[] {
				new Effect(TypeEffect.PV, false, 2592, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.PM, false, 1080, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.Atk, false, 1404, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.AtkD, false, 1080, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.AtkM, false, 1080, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.Toucher, false, 110, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.ESQ, false, 55, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.DefP, false, 648, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.DefM, false, 540, TypeCalcul.ADDITIONAL),
			}),
			new Archive(new HashMap<Language, String>() {{ put(Language.FR, "Collectionneur - Expert"); put(Language.EN, "Expert Collector"); }}, Quality.ORANGE, new Effect[] {
				new Effect(TypeEffect.PV, false, 3024, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.PM, false, 1260, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.Atk, false, 1638, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.AtkD, false, 1260, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.AtkM, false, 1260, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.Toucher, false, 120, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.ESQ, false, 60, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.DefP, false, 756, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.DefM, false, 630, TypeCalcul.ADDITIONAL),
			}),
			new Archive(new HashMap<Language, String>() {{ put(Language.FR, "Collectionneur - Talentueux"); put(Language.EN, "Talented Collector"); }}, Quality.ORANGE, new Effect[] {
				new Effect(TypeEffect.PV, false, 3456, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.PM, false, 1440, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.Atk, false, 1872, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.AtkD, false, 1440, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.AtkM, false, 1440, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.Toucher, false, 130, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.ESQ, false, 65, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.DefP, false, 864, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.DefM, false, 720, TypeCalcul.ADDITIONAL),
			}),
			new Archive(new HashMap<Language, String>() {{ put(Language.FR, "Collectionneur - Chef"); put(Language.EN, "Chief Collector"); }}, Quality.ORANGE, new Effect[] {
				new Effect(TypeEffect.PV, false, 3888, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.PM, false, 1620, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.Atk, false, 2106, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.AtkD, false, 1620, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.AtkM, false, 1620, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.Toucher, false, 140, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.ESQ, false, 70, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.DefP, false, 972, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.DefM, false, 810, TypeCalcul.ADDITIONAL),
			}),
			new Archive(new HashMap<Language, String>() {{ put(Language.FR, "Collectionneur - Maître"); put(Language.EN, "Master Collector"); }}, Quality.GOLD, new Effect[] {
				new Effect(TypeEffect.PV, false, 4320, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.PM, false, 1800, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.Atk, false, 2340, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.AtkD, false, 1800, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.AtkM, false, 1800, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.Toucher, false, 150, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.ESQ, false, 75, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.DefP, false, 1080, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.DefM, false, 900, TypeCalcul.ADDITIONAL),
			}),
			new Archive(new HashMap<Language, String>() {{ put(Language.FR, "Blogueur novice"); put(Language.EN, "Novice News Blogger"); }}, Quality.WHITE, new Effect[] {
				new Effect(TypeEffect.TCCP, false, 8, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.TCCM, false, 8, TypeCalcul.ADDITIONAL),
			}),
			new Archive(new HashMap<Language, String>() {{ put(Language.FR, "Blogueur amateur"); put(Language.EN, "Basic News Blogger"); }}, Quality.GREEN, new Effect[] {
				new Effect(TypeEffect.TCCP, false, 16, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.TCCM, false, 16, TypeCalcul.ADDITIONAL),
			}),
			new Archive(new HashMap<Language, String>() {{ put(Language.FR, "Blogueur intermédiaire"); put(Language.EN, "Intermediate News Blogger"); }}, Quality.GREEN, new Effect[] {
				new Effect(TypeEffect.TCCP, false, 20, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.TCCM, false, 20, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.RTCCP, false, 5, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.RTCCM, false, 5, TypeCalcul.ADDITIONAL),
			}),
			new Archive(new HashMap<Language, String>() {{ put(Language.FR, "Blogueur confirmé"); put(Language.EN, "Professional News Blogger"); }}, Quality.BLUE, new Effect[] {
				new Effect(TypeEffect.TCCP, false, 24, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.TCCM, false, 24, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.RTCCP, false, 10, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.RTCCM, false, 10, TypeCalcul.ADDITIONAL),
			}),
			new Archive(new HashMap<Language, String>() {{ put(Language.FR, "Critique culinaire - Apprenti"); put(Language.EN, "Apprentice Food Critic"); }}, Quality.WHITE, new Effect[] {
				new Effect(TypeEffect.DCCP, false, 2, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.DCCM, false, 2, TypeCalcul.ADDITIONAL),
			}),
			new Archive(new HashMap<Language, String>() {{ put(Language.FR, "Critique culinaire - Débutant"); put(Language.EN, "Beginner Food Critic"); }}, Quality.GREEN, new Effect[] {
				new Effect(TypeEffect.DCCP, false, 4, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.DCCM, false, 4, TypeCalcul.ADDITIONAL),
			}),
			new Archive(new HashMap<Language, String>() {{ put(Language.FR, "Critique culinaire - Avancé"); put(Language.EN, "Advanced Food Critic"); }}, Quality.GREEN, new Effect[] {
				new Effect(TypeEffect.DCCP, false, 6, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.DCCM, false, 6, TypeCalcul.ADDITIONAL),
			}),
			new Archive(new HashMap<Language, String>() {{ put(Language.FR, "Critique culinaire - Professionnel"); put(Language.EN, "Professional Food Critic"); }}, Quality.BLUE, new Effect[] {
				new Effect(TypeEffect.DCCP, false, 8, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.DCCM, false, 8, TypeCalcul.ADDITIONAL),
			}),
			new Archive(new HashMap<Language, String>() {{ put(Language.FR, "Gourmand"); put(Language.EN, "Foodie"); }}, Quality.BLUE, new Effect[] {
				new Effect(TypeEffect.DCCP, false, 10, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.DCCM, false, 10, TypeCalcul.ADDITIONAL),
			}),
			new Archive(new HashMap<Language, String>() {{ put(Language.FR, "Gourmand - Superstar"); put(Language.EN, "Superstar Foodie"); }}, Quality.BLUE, new Effect[] {
				new Effect(TypeEffect.DCCP, false, 10, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.DCCM, false, 10, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.RDCCP, false, 2, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.RDCCM, false, 2, TypeCalcul.ADDITIONAL),
			}),
			new Archive(new HashMap<Language, String>() {{ put(Language.FR, "Gourmand - Expert"); put(Language.EN, "Expert Foodie"); }}, Quality.ORANGE, new Effect[] {
				new Effect(TypeEffect.DCCP, false, 11, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.DCCM, false, 11, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.RDCCP, false, 3, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.RDCCM, false, 3, TypeCalcul.ADDITIONAL),
			}),
			new Archive(new HashMap<Language, String>() {{ put(Language.FR, "Gourmand - Talentueux"); put(Language.EN, "Talented Foodie"); }}, Quality.ORANGE, new Effect[] {
				new Effect(TypeEffect.DCCP, false, 12, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.DCCM, false, 12, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.RDCCP, false, 5, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.RDCCM, false, 5, TypeCalcul.ADDITIONAL),
			}),
			new Archive(new HashMap<Language, String>() {{ put(Language.FR, "Gourmand - Chef"); put(Language.EN, "Chief Foodie"); }}, Quality.ORANGE, new Effect[] {
				new Effect(TypeEffect.DCCP, false, 13, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.DCCM, false, 13, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.RDCCP, false, 6, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.RDCCM, false, 6, TypeCalcul.ADDITIONAL),
			}),
			new Archive(new HashMap<Language, String>() {{ put(Language.FR, "Gourmand - Maître"); put(Language.EN, "Master Foodie"); }}, Quality.GOLD, new Effect[] {
				new Effect(TypeEffect.DCCP, false, 14, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.DCCM, false, 14, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.RDCCP, false, 7, TypeCalcul.ADDITIONAL),
				new Effect(TypeEffect.RDCCM, false, 7, TypeCalcul.ADDITIONAL),
			}),
		};
	}
	
	public static Blason[] getBlason() {
		return LoaderBlason.getBlason();
	}
	
	public static int[][][] getBase() {
		return new int[][][] {
			new int[][] {
				new int[] { 10, 12, 13, 15, 16, 18, 20, 21, 23, 25, 26, 28, 30, 31, 33, 35, 37, 39, 41, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 66, 69, 71, 74, 77, 79, 82, 85, 87, 90, 93, 95, 98, 101, 103, 106, 109, 111, 114, 117, 119, 122, 125, 127, 130, 133, 135, 138, 141, 143, 146, 149, 151, 154, 157, 159, 162, 165, 167, 170, 173, 175, 178, 181, 183, 186, 189, 191, 194, 197, 199, 202, 205, 207, 210, 213, 215, 218, 221, 223, 226, 229, 231, 234, 237, 239, 242, 245, 247, 250, },
				new int[] { 10, 12, 13, 15, 16, 18, 20, 21, 23, 25, 26, 28, 30, 31, 33, 35, 37, 39, 41, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 66, 68, 70, 72, 74, 77, 79, 81, 83, 85, 88, 90, 92, 94, 96, 99, 101, 103, 105, 107, 110, 112, 114, 116, 118, 121, 123, 125, 127, 129, 132, 134, 136, 138, 140, 143, 145, 147, 149, 151, 154, 156, 158, 160, 162, 165, 167, 169, 171, 173, 176, 178, 180, 182, 184, 187, 189, 191, 193, 195, 198, 200, 202, 204, 206, 209, 211, 213, 215, 217, },
				new int[] { 10, 12, 13, 15, 16, 18, 19, 20, 22, 23, 24, 26, 27, 28, 30, 32, 33, 35, 36, 38, 39, 41, 42, 44, 45, 47, 48, 50, 51, 53, 56, 58, 60, 62, 64, 67, 69, 71, 73, 75, 78, 80, 82, 84, 86, 89, 91, 93, 95, 97, 100, 102, 104, 106, 108, 111, 113, 115, 117, 119, 122, 124, 126, 128, 130, 133, 135, 137, 139, 141, 144, 146, 148, 150, 152, 155, 157, 159, 161, 163, 166, 168, 170, 172, 174, 177, 179, 181, 183, 185, 188, 190, 192, 194, 196, 199, 201, 203, 205, 207, },
				new int[] { 10, 12, 13, 15, 16, 18, 19, 20, 22, 23, 24, 26, 27, 28, 30, 32, 33, 35, 36, 38, 39, 41, 42, 44, 45, 47, 48, 50, 51, 53, 56, 58, 61, 63, 66, 68, 71, 73, 76, 78, 81, 83, 86, 88, 91, 93, 96, 98, 101, 103, 106, 108, 111, 113, 116, 118, 121, 123, 126, 128, 131, 133, 136, 138, 141, 143, 146, 148, 151, 153, 156, 158, 161, 163, 166, 168, 171, 173, 176, 178, 181, 183, 186, 188, 191, 193, 196, 198, 201, 203, 206, 208, 211, 213, 216, 218, 221, 223, 226, 228, },
				new int[] { 10, 12, 13, 15, 16, 18, 19, 21, 22, 24, 25, 27, 28, 30, 31, 33, 35, 36, 38, 40, 41, 43, 45, 46, 48, 50, 51, 53, 55, 56, 59, 61, 63, 65, 67, 70, 72, 74, 76, 78, 81, 83, 85, 87, 89, 92, 94, 96, 98, 100, 103, 105, 107, 109, 111, 114, 116, 118, 120, 122, 125, 127, 129, 131, 133, 136, 138, 140, 142, 144, 147, 149, 151, 153, 155, 158, 160, 162, 164, 166, 169, 171, 173, 175, 177, 180, 182, 184, 186, 188, 191, 193, 195, 197, 199, 202, 204, 206, 208, 210, },
				new int[] { 10, 12, 13, 15, 16, 18, 19, 21, 22, 24, 25, 27, 28, 30, 31, 33, 35, 36, 38, 40, 41, 43, 45, 46, 48, 50, 51, 53, 55, 56, 58, 60, 61, 63, 65, 66, 68, 70, 71, 73, 75, 76, 78, 80, 81, 83, 85, 86, 88, 90, 91, 93, 95, 96, 98, 100, 101, 103, 105, 106, 108, 110, 111, 113, 115, 116, 118, 120, 121, 123, 125, 126, 128, 130, 131, 133, 135, 136, 138, 140, 141, 143, 145, 146, 148, 150, 151, 153, 155, 156, 158, 160, 161, 163, 165, 166, 168, 170, 171, 173, },
				new int[] { 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 49, 51, 52, 53, 55, 56, 57, 59, 60, 61, 63, 64, 65, 67, 68, 69, 71, 72, 73, 75, 76, 77, 79, 80, 81, 83, 84, 85, 87, 88, 89, 91, 92, 93, 95, 96, 97, 99, 100, 101, 103, 104, 105, 107, 108, 109, 111, 112, 113, 115, 116, 117, 119, 120, 121, 123, 124, 125, 127, 128, 129, 131, 132, 133, 135, },
				new int[] { 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 46, 47, 49, 50, 52, 53, 55, 56, 58, 59, 61, 62, 64, 65, 67, 68, 70, 71, 73, 74, 76, 77, 79, 80, 82, 83, 85, 86, 88, 89, 91, 92, 94, 95, 97, 98, 100, 101, 103, 104, 106, 107, 109, 110, 112, 113, 115, 116, 118, 119, 121, 122, 124, 125, 127, 128, 130, 131, 133, 134, 136, 137, 139, 140, 142, 143, 145, 146, },
				new int[] { 10, 12, 13, 15, 16, 18, 20, 21, 23, 25, 26, 28, 30, 31, 33, 35, 37, 39, 41, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 66, 69, 71, 74, 77, 79, 82, 85, 87, 90, 93, 95, 98, 101, 103, 106, 109, 111, 114, 117, 119, 122, 125, 127, 130, 133, 135, 138, 141, 143, 146, 149, 151, 154, 157, 159, 162, 165, 167, 170, 173, 175, 178, 181, 183, 186, 189, 191, 194, 197, 199, 202, 205, 207, 210, 213, 215, 218, 221, 223, 226, 229, 231, 234, 237, 239, 242, 245, 247, 250, },
				new int[] { 10, 12, 13, 15, 16, 18, 20, 21, 23, 25, 26, 28, 30, 31, 33, 35, 37, 39, 41, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 66, 68, 70, 72, 74, 77, 79, 81, 83, 85, 88, 90, 92, 94, 96, 99, 101, 103, 105, 107, 110, 112, 114, 116, 118, 121, 123, 125, 127, 129, 132, 134, 136, 138, 140, 143, 145, 147, 149, 151, 154, 156, 158, 160, 162, 165, 167, 169, 171, 173, 176, 178, 180, 182, 184, 187, 189, 191, 193, 195, 198, 200, 202, 204, 206, 209, 211, 213, 215, 217, },
				new int[] { 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 46, 47, 49, 50, 52, 53, 55, 56, 58, 59, 61, 62, 64, 65, 67, 68, 70, 71, 73, 74, 76, 77, 79, 80, 82, 83, 85, 86, 88, 89, 91, 92, 94, 95, 97, 98, 100, 101, 103, 104, 106, 107, 109, 110, 112, 113, 115, 116, 118, 119, 121, 122, 124, 125, 127, 128, 130, 131, 133, 134, 136, 137, 139, 140, 142, 143, 145, 146, },
				new int[] { 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 49, 51, 52, 53, 55, 56, 57, 59, 60, 61, 63, 64, 65, 67, 68, 69, 71, 72, 73, 75, 76, 77, 79, 80, 81, 83, 84, 85, 87, 88, 89, 91, 92, 93, 95, 96, 97, 99, 100, 101, 103, 104, 105, 107, 108, 109, 111, 112, 113, 115, 116, 117, 119, 120, 121, 123, 124, 125, 127, 128, 129, 131, 132, 133, 135, },
			},
			new int[][] {
				new int[] { 10, 12, 13, 15, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 39, 41, 44, 46, 49, 51, 54, 56, 59, 61, 64, 66, 69, 71, 74, 77, 80, 83, 86, 89, 92, 95, 98, 101, 104, 107, 110, 113, 116, 119, 122, 125, 128, 131, 134, 137, 140, 143, 146, 149, 152, 155, 158, 161, 164, 167, 170, 173, 176, 179, 182, 185, 188, 191, 194, 197, 200, 203, 206, 209, 212, 215, 218, 221, 224, 227, 230, 233, 236, 239, 242, 245, 248, 251, 254, 257, 260, 263, 266, 269, 272, 275, 278, 281, 284, },
				new int[] { 10, 12, 13, 15, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 39, 41, 44, 46, 49, 51, 54, 56, 59, 61, 64, 66, 69, 71, 74, 78, 81, 84, 88, 91, 94, 98, 101, 104, 108, 111, 114, 118, 121, 124, 128, 131, 134, 138, 141, 144, 148, 151, 154, 158, 161, 164, 168, 171, 174, 178, 181, 184, 188, 191, 194, 198, 201, 204, 208, 211, 214, 218, 221, 224, 228, 231, 234, 238, 241, 244, 248, 251, 254, 258, 261, 264, 268, 271, 274, 278, 281, 284, 288, 291, 294, 298, 301, 304, 308, },
				new int[] { 10, 12, 13, 15, 16, 18, 19, 21, 22, 24, 25, 27, 28, 30, 31, 33, 34, 36, 37, 39, 40, 42, 43, 45, 46, 48, 49, 51, 52, 54, 57, 59, 61, 64, 66, 68, 71, 73, 75, 78, 80, 82, 85, 87, 89, 92, 94, 96, 99, 101, 103, 106, 108, 110, 113, 115, 117, 120, 122, 124, 127, 129, 131, 134, 136, 138, 141, 143, 145, 148, 150, 152, 155, 157, 159, 162, 164, 166, 169, 171, 173, 176, 178, 180, 183, 185, 187, 190, 192, 194, 197, 199, 201, 204, 206, 208, 211, 213, 215, 218, },
				new int[] { 10, 12, 13, 15, 16, 18, 19, 21, 22, 24, 25, 27, 28, 30, 31, 33, 34, 36, 37, 39, 40, 42, 43, 45, 46, 48, 49, 51, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, },
				new int[] { 10, 12, 13, 15, 16, 18, 20, 21, 23, 25, 26, 28, 30, 31, 33, 35, 37, 38, 40, 42, 43, 45, 47, 48, 50, 52, 53, 55, 57, 58, 61, 63, 65, 68, 70, 72, 75, 77, 79, 82, 84, 86, 89, 91, 93, 96, 98, 100, 103, 105, 107, 110, 112, 114, 117, 119, 121, 124, 126, 128, 131, 133, 135, 138, 140, 142, 145, 147, 149, 152, 154, 156, 159, 161, 163, 166, 168, 170, 173, 175, 177, 180, 182, 184, 187, 189, 191, 194, 196, 198, 201, 203, 205, 208, 210, 212, 215, 217, 219, 222, },
				new int[] { 10, 12, 13, 15, 16, 18, 20, 21, 23, 25, 26, 28, 30, 31, 33, 35, 37, 38, 40, 42, 43, 45, 47, 48, 50, 52, 53, 55, 57, 58, 61, 63, 65, 67, 69, 72, 74, 76, 78, 80, 83, 85, 87, 89, 91, 94, 96, 98, 100, 102, 105, 107, 109, 111, 113, 116, 118, 120, 122, 124, 127, 129, 131, 133, 135, 138, 140, 142, 144, 146, 149, 151, 153, 155, 157, 160, 162, 164, 166, 168, 171, 173, 175, 177, 179, 182, 184, 186, 188, 190, 193, 195, 197, 199, 201, 204, 206, 208, 210, 212, },
				new int[] { 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 33, 34, 35, 36, 38, 39, 40, 41, 43, 44, 45, 47, 48, 50, 51, 53, 54, 56, 57, 59, 60, 62, 63, 65, 66, 68, 69, 71, 72, 74, 75, 77, 78, 80, 81, 83, 84, 86, 87, 89, 90, 92, 93, 95, 96, 98, 99, 101, 102, 104, 105, 107, 108, 110, 111, 113, 114, 116, 117, 119, 120, 122, 123, 125, 126, 128, 129, 131, 132, 134, 135, 137, 138, 140, 141, 143, 144, 146, 147, 149, 150, },
				new int[] { 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 33, 34, 35, 36, 38, 39, 40, 41, 43, 44, 45, 47, 49, 51, 52, 54, 56, 58, 59, 61, 63, 65, 66, 68, 70, 72, 73, 75, 77, 79, 80, 82, 84, 86, 87, 89, 91, 93, 94, 96, 98, 100, 101, 103, 105, 107, 108, 110, 112, 114, 115, 117, 119, 121, 122, 124, 126, 128, 129, 131, 133, 135, 136, 138, 140, 142, 143, 145, 147, 149, 150, 152, 154, 156, 157, 159, 161, 163, 164, 166, 168, },
				new int[] { 10, 12, 13, 15, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 39, 41, 44, 46, 49, 51, 54, 56, 59, 61, 64, 66, 69, 71, 74, 77, 80, 83, 86, 89, 92, 95, 98, 101, 104, 107, 110, 113, 116, 119, 122, 125, 128, 131, 134, 137, 140, 143, 146, 149, 152, 155, 158, 161, 164, 167, 170, 173, 176, 179, 182, 185, 188, 191, 194, 197, 200, 203, 206, 209, 212, 215, 218, 221, 224, 227, 230, 233, 236, 239, 242, 245, 248, 251, 254, 257, 260, 263, 266, 269, 272, 275, 278, 281, 284, },
				new int[] { 10, 12, 13, 15, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 39, 41, 44, 46, 49, 51, 54, 56, 59, 61, 64, 66, 69, 71, 74, 77, 79, 81, 84, 86, 88, 91, 93, 95, 98, 100, 102, 105, 107, 109, 112, 114, 116, 119, 121, 123, 126, 128, 130, 133, 135, 137, 140, 142, 144, 147, 149, 151, 154, 156, 158, 161, 163, 165, 168, 170, 172, 175, 177, 179, 182, 184, 186, 189, 191, 193, 196, 198, 200, 203, 205, 207, 210, 212, 214, 217, 219, 221, 224, 226, 228, 231, 233, 235, 238, },
				new int[] { 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 33, 34, 35, 36, 38, 39, 40, 41, 43, 44, 45, 47, 49, 51, 52, 54, 56, 58, 59, 61, 63, 65, 66, 68, 70, 72, 73, 75, 77, 79, 80, 82, 84, 86, 87, 89, 91, 93, 94, 96, 98, 100, 101, 103, 105, 107, 108, 110, 112, 114, 115, 117, 119, 121, 122, 124, 126, 128, 129, 131, 133, 135, 136, 138, 140, 142, 143, 145, 147, 149, 150, 152, 154, 156, 157, 159, 161, 163, 164, 166, 168, },
				new int[] { 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 33, 34, 35, 36, 38, 39, 40, 41, 43, 44, 45, 47, 48, 50, 51, 53, 54, 56, 57, 59, 60, 62, 63, 65, 66, 68, 69, 71, 72, 74, 75, 77, 78, 80, 81, 83, 84, 86, 87, 89, 90, 92, 93, 95, 96, 98, 99, 101, 102, 104, 105, 107, 108, 110, 111, 113, 114, 116, 117, 119, 120, 122, 123, 125, 126, 128, 129, 131, 132, 134, 135, 137, 138, 140, 141, 143, 144, 146, 147, 149, 150, },
			},
			new int[][] {
				new int[] { 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, },
				new int[] { 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 44, 45, 47, 48, 50, 51, 53, 54, 56, 57, 59, 60, 62, 63, 65, 66, 68, 69, 71, 72, 74, 75, 77, 78, 80, 81, 83, 84, 86, 87, 89, 90, 92, 93, 95, 96, 98, 99, 101, 102, 104, 105, 107, 108, 110, 111, 113, 114, 116, 117, 119, 120, 122, 123, 125, 126, 128, 129, 131, 132, 134, 135, 137, 138, 140, 141, 143, 144, },
				new int[] { 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 30, 31, 32, 34, 35, 36, 38, 39, 40, 42, 43, 44, 46, 47, 49, 50, 52, 53, 55, 56, 58, 59, 61, 62, 64, 65, 67, 68, 70, 71, 73, 74, 76, 77, 79, 80, 82, 83, 85, 86, 88, 89, 91, 92, 94, 95, 97, 98, 100, 101, 103, 104, 106, 107, 109, 110, 112, 113, 115, 116, 118, 119, 121, 122, 124, 125, 127, 128, 130, 131, 133, 134, 136, 137, 139, 140, 142, 143, 145, 146, 148, 149, },
				new int[] { 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 30, 31, 32, 34, 35, 36, 38, 39, 40, 42, 43, 44, 46, 47, 49, 50, 52, 53, 55, 56, 58, 59, 61, 62, 64, 65, 67, 68, 70, 71, 73, 74, 76, 77, 79, 80, 82, 83, 85, 86, 88, 89, 91, 92, 94, 95, 97, 98, 100, 101, 103, 104, 106, 107, 109, 110, 112, 113, 115, 116, 118, 119, 121, 122, 124, 125, 127, 128, 130, 131, 133, 134, 136, 137, 139, 140, 142, 143, 145, 146, 148, 149, },
				new int[] { 10, 11, 12, 13, 14, 16, 17, 19, 20, 22, 23, 25, 26, 28, 29, 31, 33, 34, 36, 38, 39, 41, 43, 44, 46, 48, 49, 51, 53, 54, 56, 58, 59, 61, 63, 64, 66, 68, 69, 71, 73, 74, 76, 78, 79, 81, 83, 84, 86, 88, 89, 91, 93, 94, 96, 98, 99, 101, 103, 104, 106, 108, 109, 111, 113, 114, 116, 118, 119, 121, 123, 124, 126, 128, 129, 131, 133, 134, 136, 138, 139, 141, 143, 144, 146, 148, 149, 151, 153, 154, 156, 158, 159, 161, 163, 164, 166, 168, 169, 171, },
				new int[] { 10, 11, 12, 13, 14, 16, 17, 19, 20, 22, 23, 25, 26, 28, 29, 31, 33, 34, 36, 38, 39, 41, 43, 44, 46, 48, 49, 51, 53, 54, 57, 59, 61, 64, 66, 68, 71, 73, 75, 78, 80, 82, 85, 87, 89, 92, 94, 96, 99, 101, 103, 106, 108, 110, 113, 115, 117, 120, 122, 124, 127, 129, 131, 134, 136, 138, 141, 143, 145, 148, 150, 152, 155, 157, 159, 162, 164, 166, 169, 171, 173, 176, 178, 180, 183, 185, 187, 190, 192, 194, 197, 199, 201, 204, 206, 208, 211, 213, 215, 218, },
				new int[] { 10, 11, 12, 13, 14, 17, 19, 21, 24, 26, 28, 31, 33, 35, 38, 41, 43, 46, 48, 51, 53, 56, 58, 61, 63, 66, 68, 71, 73, 76, 80, 83, 87, 90, 94, 97, 101, 104, 108, 111, 115, 118, 122, 125, 129, 132, 136, 139, 143, 146, 150, 153, 157, 160, 164, 167, 171, 174, 178, 181, 185, 188, 192, 195, 199, 202, 206, 209, 213, 216, 220, 223, 227, 230, 234, 237, 241, 244, 248, 251, 255, 258, 262, 265, 269, 272, 276, 279, 283, 286, 290, 293, 297, 300, 304, 307, 311, 314, 318, 321, },
				new int[] { 10, 11, 12, 13, 14, 17, 19, 21, 24, 26, 28, 31, 33, 35, 38, 41, 43, 46, 48, 51, 53, 56, 58, 61, 63, 66, 68, 71, 73, 76, 79, 82, 85, 88, 91, 94, 97, 100, 103, 106, 109, 112, 115, 118, 121, 124, 127, 130, 133, 136, 139, 142, 145, 148, 151, 154, 157, 160, 163, 166, 169, 172, 175, 178, 181, 184, 187, 190, 193, 196, 199, 202, 205, 208, 211, 214, 217, 220, 223, 226, 229, 232, 235, 238, 241, 244, 247, 250, 253, 256, 259, 262, 265, 268, 271, 274, 277, 280, 283, 286, },
				new int[] { 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, },
				new int[] { 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 44, 45, 47, 48, 50, 51, 53, 54, 56, 57, 59, 60, 62, 63, 65, 66, 68, 69, 71, 72, 74, 75, 77, 78, 80, 81, 83, 84, 86, 87, 89, 90, 92, 93, 95, 96, 98, 99, 101, 102, 104, 105, 107, 108, 110, 111, 113, 114, 116, 117, 119, 120, 122, 123, 125, 126, 128, 129, 131, 132, 134, 135, 137, 138, 140, 141, 143, 144, },
				new int[] { 10, 11, 12, 13, 14, 17, 19, 21, 24, 26, 28, 31, 33, 35, 38, 41, 43, 46, 48, 51, 53, 56, 58, 61, 63, 66, 68, 71, 73, 76, 79, 82, 85, 88, 91, 94, 97, 100, 103, 106, 109, 112, 115, 118, 121, 124, 127, 130, 133, 136, 139, 142, 145, 148, 151, 154, 157, 160, 163, 166, 169, 172, 175, 178, 181, 184, 187, 190, 193, 196, 199, 202, 205, 208, 211, 214, 217, 220, 223, 226, 229, 232, 235, 238, 241, 244, 247, 250, 253, 256, 259, 262, 265, 268, 271, 274, 277, 280, 283, 286, },
				new int[] { 10, 11, 12, 13, 14, 17, 19, 21, 24, 26, 28, 31, 33, 35, 38, 41, 43, 46, 48, 51, 53, 56, 58, 61, 63, 66, 68, 71, 73, 76, 80, 83, 87, 90, 94, 97, 101, 104, 108, 111, 115, 118, 122, 125, 129, 132, 136, 139, 143, 146, 150, 153, 157, 160, 164, 167, 171, 174, 178, 181, 185, 188, 192, 195, 199, 202, 206, 209, 213, 216, 220, 223, 227, 230, 234, 237, 241, 244, 248, 251, 255, 258, 262, 265, 269, 272, 276, 279, 283, 286, 290, 293, 297, 300, 304, 307, 311, 314, 318, 321, },
			},
			new int[][] {
				new int[] { 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 45, 46, 47, 49, 50, 51, 53, 54, 55, 57, 58, 59, 61, 62, 63, 65, 66, 67, 69, 70, 71, 73, 74, 75, 77, 78, 79, 81, 82, 83, 85, 86, 87, 89, 90, 91, 93, 94, 95, 97, 98, 99, 101, 102, 103, 105, 106, 107, 109, 110, 111, 113, 114, 115, 117, 118, 119, 121, 122, 123, 125, 126, 127, 129, 130, 131, 133, },
				new int[] { 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 44, 45, 47, 48, 50, 51, 53, 54, 56, 57, 59, 60, 62, 63, 65, 66, 68, 69, 71, 72, 74, 75, 77, 78, 80, 81, 83, 84, 86, 87, 89, 90, 92, 93, 95, 96, 98, 99, 101, 102, 104, 105, 107, 108, 110, 111, 113, 114, 116, 117, 119, 120, 122, 123, 125, 126, 128, 129, 131, 132, 134, 135, 137, 138, 140, 141, 143, 144, },
				new int[] { 10, 11, 12, 13, 14, 16, 17, 18, 20, 21, 22, 24, 25, 26, 28, 30, 31, 32, 34, 35, 36, 38, 39, 40, 42, 43, 44, 46, 47, 48, 50, 51, 53, 54, 56, 57, 59, 60, 62, 63, 65, 66, 68, 69, 71, 72, 74, 75, 77, 78, 80, 81, 83, 84, 86, 87, 89, 90, 92, 93, 95, 96, 98, 99, 101, 102, 104, 105, 107, 108, 110, 111, 113, 114, 116, 117, 119, 120, 122, 123, 125, 126, 128, 129, 131, 132, 134, 135, 137, 138, 140, 141, 143, 144, 146, 147, 149, 150, 152, 153, },
				new int[] { 10, 11, 12, 13, 14, 16, 17, 18, 20, 21, 22, 24, 25, 26, 28, 30, 31, 32, 34, 35, 36, 38, 39, 40, 42, 43, 44, 46, 47, 48, 50, 51, 52, 54, 55, 56, 58, 59, 60, 62, 63, 64, 66, 67, 68, 70, 71, 72, 74, 75, 76, 78, 79, 80, 82, 83, 84, 86, 87, 88, 90, 91, 92, 94, 95, 96, 98, 99, 100, 102, 103, 104, 106, 107, 108, 110, 111, 112, 114, 115, 116, 118, 119, 120, 122, 123, 124, 126, 127, 128, 130, 131, 132, 134, 135, 136, 138, 139, 140, 142, },
				new int[] { 10, 11, 12, 13, 14, 16, 17, 19, 21, 23, 24, 26, 28, 29, 31, 33, 35, 37, 39, 41, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 64, 67, 69, 72, 75, 77, 80, 83, 85, 88, 91, 93, 96, 99, 101, 104, 107, 109, 112, 115, 117, 120, 123, 125, 128, 131, 133, 136, 139, 141, 144, 147, 149, 152, 155, 157, 160, 163, 165, 168, 171, 173, 176, 179, 181, 184, 187, 189, 192, 195, 197, 200, 203, 205, 208, 211, 213, 216, 219, 221, 224, 227, 229, 232, 235, 237, 240, 243, 245, 248, },
				new int[] { 10, 11, 12, 13, 14, 16, 17, 19, 21, 23, 24, 26, 28, 29, 31, 33, 35, 37, 39, 41, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 64, 66, 68, 71, 73, 75, 78, 80, 82, 85, 87, 89, 92, 94, 96, 99, 101, 103, 106, 108, 110, 113, 115, 117, 120, 122, 124, 127, 129, 131, 134, 136, 138, 141, 143, 145, 148, 150, 152, 155, 157, 159, 162, 164, 166, 169, 171, 173, 176, 178, 180, 183, 185, 187, 190, 192, 194, 197, 199, 201, 204, 206, 208, 211, 213, 215, 218, 220, 222, 225, },
				new int[] { 10, 11, 12, 13, 14, 16, 18, 19, 21, 23, 24, 26, 28, 29, 31, 33, 35, 37, 39, 41, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 64, 66, 69, 71, 74, 76, 79, 81, 84, 86, 89, 91, 94, 96, 99, 101, 104, 106, 109, 111, 114, 116, 119, 121, 124, 126, 129, 131, 134, 136, 139, 141, 144, 146, 149, 151, 154, 156, 159, 161, 164, 166, 169, 171, 174, 176, 179, 181, 184, 186, 189, 191, 194, 196, 199, 201, 204, 206, 209, 211, 214, 216, 219, 221, 224, 226, 229, 231, 234, 236, },
				new int[] { 10, 11, 12, 13, 14, 16, 18, 19, 21, 23, 24, 26, 28, 29, 31, 33, 35, 37, 39, 41, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 64, 66, 68, 70, 73, 75, 77, 79, 82, 84, 86, 88, 91, 93, 95, 97, 100, 102, 104, 106, 109, 111, 113, 115, 118, 120, 122, 124, 127, 129, 131, 133, 136, 138, 140, 142, 145, 147, 149, 151, 154, 156, 158, 160, 163, 165, 167, 169, 172, 174, 176, 178, 181, 183, 185, 187, 190, 192, 194, 196, 199, 201, 203, 205, 208, 210, 212, 214, 217, 219, },
				new int[] { 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 45, 46, 47, 49, 50, 51, 53, 54, 55, 57, 58, 59, 61, 62, 63, 65, 66, 67, 69, 70, 71, 73, 74, 75, 77, 78, 79, 81, 82, 83, 85, 86, 87, 89, 90, 91, 93, 94, 95, 97, 98, 99, 101, 102, 103, 105, 106, 107, 109, 110, 111, 113, 114, 115, 117, 118, 119, 121, 122, 123, 125, 126, 127, 129, 130, 131, 133, },
				new int[] { 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 44, 45, 47, 48, 50, 51, 53, 54, 56, 57, 59, 60, 62, 63, 65, 66, 68, 69, 71, 72, 74, 75, 77, 78, 80, 81, 83, 84, 86, 87, 89, 90, 92, 93, 95, 96, 98, 99, 101, 102, 104, 105, 107, 108, 110, 111, 113, 114, 116, 117, 119, 120, 122, 123, 125, 126, 128, 129, 131, 132, 134, 135, 137, 138, 140, 141, 143, 144, },
				new int[] { 10, 11, 12, 13, 14, 16, 18, 19, 21, 23, 24, 26, 28, 29, 31, 33, 35, 37, 39, 41, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 64, 66, 68, 70, 73, 75, 77, 79, 82, 84, 86, 88, 91, 93, 95, 97, 100, 102, 104, 106, 109, 111, 113, 115, 118, 120, 122, 124, 127, 129, 131, 133, 136, 138, 140, 142, 145, 147, 149, 151, 154, 156, 158, 160, 163, 165, 167, 169, 172, 174, 176, 178, 181, 183, 185, 187, 190, 192, 194, 196, 199, 201, 203, 205, 208, 210, 212, 214, 217, 219, },
				new int[] { 10, 11, 12, 13, 14, 16, 18, 19, 21, 23, 24, 26, 28, 29, 31, 33, 35, 37, 39, 41, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 64, 66, 69, 71, 74, 76, 79, 81, 84, 86, 89, 91, 94, 96, 99, 101, 104, 106, 109, 111, 114, 116, 119, 121, 124, 126, 129, 131, 134, 136, 139, 141, 144, 146, 149, 151, 154, 156, 159, 161, 164, 166, 169, 171, 174, 176, 179, 181, 184, 186, 189, 191, 194, 196, 199, 201, 204, 206, 209, 211, 214, 216, 219, 221, 224, 226, 229, 231, 234, 236, },
			},
			new int[][] {
				new int[] { 10, 12, 13, 15, 16, 18, 19, 21, 22, 24, 25, 27, 28, 30, 31, 33, 34, 36, 37, 39, 40, 42, 43, 45, 46, 48, 49, 51, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, },
				new int[] { 10, 12, 13, 15, 16, 18, 19, 21, 22, 24, 25, 27, 28, 30, 31, 33, 34, 36, 37, 39, 40, 42, 43, 45, 46, 48, 49, 51, 52, 54, 56, 57, 59, 60, 62, 63, 65, 66, 68, 69, 71, 72, 74, 75, 77, 78, 80, 81, 83, 84, 86, 87, 89, 90, 92, 93, 95, 96, 98, 99, 101, 102, 104, 105, 107, 108, 110, 111, 113, 114, 116, 117, 119, 120, 122, 123, 125, 126, 128, 129, 131, 132, 134, 135, 137, 138, 140, 141, 143, 144, 146, 147, 149, 150, 152, 153, 155, 156, 158, 159, },
				new int[] { 10, 12, 13, 15, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 39, 41, 43, 46, 48, 50, 53, 55, 57, 60, 62, 64, 67, 69, 71, 74, 76, 79, 81, 84, 86, 89, 91, 94, 96, 99, 101, 104, 106, 109, 111, 114, 116, 119, 121, 124, 126, 129, 131, 134, 136, 139, 141, 144, 146, 149, 151, 154, 156, 159, 161, 164, 166, 169, 171, 174, 176, 179, 181, 184, 186, 189, 191, 194, 196, 199, 201, 204, 206, 209, 211, 214, 216, 219, 221, 224, 226, 229, 231, 234, 236, 239, 241, 244, 246, },
				new int[] { 10, 12, 13, 15, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 39, 41, 43, 46, 48, 50, 53, 55, 57, 60, 62, 64, 67, 69, 71, 74, 77, 79, 82, 85, 87, 90, 93, 95, 98, 101, 103, 106, 109, 111, 114, 117, 119, 122, 125, 127, 130, 133, 135, 138, 141, 143, 146, 149, 151, 154, 157, 159, 162, 165, 167, 170, 173, 175, 178, 181, 183, 186, 189, 191, 194, 197, 199, 202, 205, 207, 210, 213, 215, 218, 221, 223, 226, 229, 231, 234, 237, 239, 242, 245, 247, 250, 253, 255, 258, },
				new int[] { 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 32, 33, 34, 36, 37, 38, 40, 41, 42, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, },
				new int[] { 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 32, 33, 34, 36, 37, 38, 40, 41, 42, 44, 45, 46, 48, 49, 51, 52, 54, 55, 57, 58, 60, 61, 63, 64, 66, 67, 69, 70, 72, 73, 75, 76, 78, 79, 81, 82, 84, 85, 87, 88, 90, 91, 93, 94, 96, 97, 99, 100, 102, 103, 105, 106, 108, 109, 111, 112, 114, 115, 117, 118, 120, 121, 123, 124, 126, 127, 129, 130, 132, 133, 135, 136, 138, 139, 141, 142, 144, 145, 147, 148, 150, 151, },
				new int[] { 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 32, 33, 34, 36, 37, 38, 40, 41, 42, 44, 45, 46, 48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, 84, 85, 86, 88, 89, 90, 91, 93, 94, 95, 96, 98, 99, 100, 101, 103, 104, 105, 106, 108, 109, 110, 111, 113, 114, 115, 116, 118, 119, 120, 121, 123, 124, 125, 126, 128, 129, 130, 131, 133, 134, },
				new int[] { 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 32, 33, 34, 36, 37, 38, 40, 41, 42, 44, 45, 46, 48, 49, 51, 52, 54, 55, 57, 58, 60, 61, 63, 64, 66, 67, 69, 70, 72, 73, 75, 76, 78, 79, 81, 82, 84, 85, 87, 88, 90, 91, 93, 94, 96, 97, 99, 100, 102, 103, 105, 106, 108, 109, 111, 112, 114, 115, 117, 118, 120, 121, 123, 124, 126, 127, 129, 130, 132, 133, 135, 136, 138, 139, 141, 142, 144, 145, 147, 148, 150, 151, },
				new int[] { 10, 12, 13, 15, 16, 18, 19, 21, 22, 24, 25, 27, 28, 30, 31, 33, 34, 36, 37, 39, 40, 42, 43, 45, 46, 48, 49, 51, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, },
				new int[] { 10, 12, 13, 15, 16, 18, 19, 21, 22, 24, 25, 27, 28, 30, 31, 33, 34, 36, 37, 39, 40, 42, 43, 45, 46, 48, 49, 51, 52, 54, 57, 59, 62, 64, 67, 69, 72, 74, 77, 79, 82, 84, 87, 89, 92, 94, 97, 99, 102, 104, 107, 109, 112, 114, 117, 119, 122, 124, 127, 129, 132, 134, 137, 139, 142, 144, 147, 149, 152, 154, 157, 159, 162, 164, 167, 169, 172, 174, 177, 179, 182, 184, 187, 189, 192, 194, 197, 199, 202, 204, 207, 209, 212, 214, 217, 219, 222, 224, 227, 229, },
				new int[] { 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 32, 33, 34, 36, 37, 38, 40, 41, 42, 44, 45, 46, 48, 49, 51, 52, 54, 55, 57, 58, 60, 61, 63, 64, 66, 67, 69, 70, 72, 73, 75, 76, 78, 79, 81, 82, 84, 85, 87, 88, 90, 91, 93, 94, 96, 97, 99, 100, 102, 103, 105, 106, 108, 109, 111, 112, 114, 115, 117, 118, 120, 121, 123, 124, 126, 127, 129, 130, 132, 133, 135, 136, 138, 139, 141, 142, 144, 145, 147, 148, 150, 151, },
				new int[] { 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 32, 33, 34, 36, 37, 38, 40, 41, 42, 44, 45, 46, 48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, 84, 85, 86, 88, 89, 90, 91, 93, 94, 95, 96, 98, 99, 100, 101, 103, 104, 105, 106, 108, 109, 110, 111, 113, 114, 115, 116, 118, 119, 120, 121, 123, 124, 125, 126, 128, 129, 130, 131, 133, 134, },
			},
		};
	}
}
